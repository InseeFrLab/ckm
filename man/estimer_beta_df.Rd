% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimer_intervalle_confiance_ratio.R
\name{estimer_beta_df}
\alias{estimer_beta_df}
\title{Estime le beta minimal tel que P(|R-R'|>beta) < alpha, pour alpha fixé et
pour chacun des ratio R=A/B fournis dans le dataframe en entrée.}
\usage{
estimer_beta_df(
  data,
  fun = function(a, b) {
     a/b * 100
 },
  D,
  V,
  js = 0,
  beta_min = 0,
  beta_max = 10,
  precision = 0.1,
  alpha = 0.05,
  posterior = FALSE,
  parallel = FALSE,
  max_cores = NULL
)
}
\arguments{
\item{data}{dataframe avec deux colonnes correspondant aux numérateurs et
dénominateurs des ratios}

\item{fun}{function, sert à calculer la statistique souhaitée
à partir de A et B}

\item{D}{Déviation max de la CKM}

\item{V}{Variance de la CKM}

\item{js}{Seuil interdiction de la CKM}

\item{beta_min}{integer, seuil de précision minimal}

\item{beta_max}{integer, seuil de précision maximal}

\item{precision}{double, niveau de précision de l'estimation de beta}

\item{alpha}{double, niveau d'erreur fixé}

\item{posterior}{Booléen: Si \code{TRUE}, c'est beta' qui est calculé.}

\item{parallel}{Booléen, si le calcul doit être parallélisé}

\item{max_cores, }{integer, nombre maximal de travaux à réaliser en parallèle}
}
\value{
data.frame avec les colonnes suivantes:
- A = numérateur
- B = dénominateur
- R = ratio = A/B*100
- alpha
- beta = correspondant à beta0 si \code{posterior=FALSE} ou
à beta0' si \code{posterior=TRUE}
}
\description{
Détermine la meilleure précision qu'il est possible d'atteindre dans le cas
du calcul d'un ratio. La fonction prend en entrée un dataframe et calcule
la précision pour chacun des ratios du dataframe.
}
\details{
Si posterior = FALSE: détermine beta0 pour alpha fixé
Si posterior = TRUE: détermine beta0' pour alpha fixé


Si \code{posterior=FALSE}, le calcul repose sur l'approche a priori,
c'est-à-dire que le ratio fourni (A/B) est le ratio réel/original.
Sinon, le calcul repose sur l'approche a posteriori,
c'est-à-dire que le ratio fourni (A/B) est le ratio issu de la perturbation
par CKM.

Le meilleur beta est recherché dans l'intervalle [beta_min; beta_max].
}
\examples{
test <- data.frame(
  A = sort(rep(c(1,50,100),4)),
  B = rep(c(100,200,300,500), 3)
)

fun = \(a,b){a/b * 100}
D = 5
V = 1

# Approche a priori
res <- estimer_beta_df(test, fun, D=5, V=1)
# Approche a posteriori
res_ap <- estimer_beta_df(test, fun, D, V, posterior = TRUE)
}
